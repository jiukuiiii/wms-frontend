{"ast":null,"code":"var _jsxFileName = \"/Users/jiukuiiii/Desktop/wms_demo/wms_frontend/src/App.js\",\n  _s = $RefreshSig$();\n// 入库校验增强：条码唯一、不能为空、数量不能为负数\nimport { useEffect, useState, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE = \"https://wms-backend-hdu8.onrender.com/api/products\";\nfunction App() {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [view, setView] = useState(\"list\");\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [product, setProduct] = useState({\n    _id: null,\n    boxBarcode: \"\",\n    productBarcode: \"\",\n    name: \"\",\n    spec: \"\",\n    stock: 0\n  });\n  const [quantity, setQuantity] = useState(0);\n  const [isEditable, setIsEditable] = useState(false);\n  const barcodeRef = useRef();\n  const fetchProducts = async () => {\n    try {\n      const res = await fetch(API_BASE);\n      const data = await res.json();\n      setProducts(data);\n    } catch (err) {\n      alert(\"无法获取产品列表\");\n    }\n  };\n  useEffect(() => {\n    fetchProducts();\n  }, []);\n  const resetProduct = () => {\n    setProduct({\n      _id: null,\n      boxBarcode: \"\",\n      productBarcode: \"\",\n      name: \"\",\n      spec: \"\",\n      stock: 0\n    });\n    setQuantity(0);\n    setIsEditable(false);\n  };\n  const handleBarcodeEnter = e => {\n    if (e.key === \"Enter\") {\n      const value = e.target.value.trim();\n      if (!value) return;\n      const found = products.find(item => item.productBarcode === value || item.boxBarcode === value);\n      if (found) {\n        setProduct(found);\n        setQuantity(0);\n        setIsEditable(false);\n      } else {\n        if (window.confirm(\"未找到该条码的产品，是否创建新产品？\")) {\n          resetProduct();\n          setProduct(prev => ({\n            ...prev,\n            productBarcode: value\n          }));\n          setIsEditable(true);\n          setView(\"add\");\n        }\n      }\n    }\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (name === \"stock\") {\n      setQuantity(Number(value));\n    } else {\n      setProduct(prev => ({\n        ...prev,\n        [name]: value\n      }));\n    }\n  };\n  const handleSubmit = async () => {\n    if (!product.productBarcode.trim()) {\n      alert(\"产品条码不能为空\");\n      return;\n    }\n    if (!product.name.trim()) {\n      alert(\"产品名称不能为空\");\n      return;\n    }\n    if (quantity <= 0) {\n      alert(\"入库数量必须大于 0\");\n      return;\n    }\n    const duplicate = products.find(p => p.productBarcode === product.productBarcode && p._id !== product._id);\n    if (duplicate) {\n      alert(\"产品条码已存在，必须唯一\");\n      return;\n    }\n    try {\n      const existing = products.find(p => p.productBarcode === product.productBarcode);\n      let method = \"POST\",\n        url = API_BASE;\n      let newData = {\n        ...product\n      };\n      if (existing) {\n        method = \"PUT\";\n        url = `${API_BASE}/${existing._id}`;\n        newData = {\n          ...existing,\n          stock: existing.stock + quantity\n        };\n      } else {\n        newData.stock = quantity;\n      }\n      const res = await fetch(url, {\n        method,\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(newData)\n      });\n      if (res.ok) {\n        alert(existing ? `已更新库存，当前库存：${newData.stock}` : \"保存成功\");\n        resetProduct();\n        fetchProducts();\n        setView(\"list\");\n        setTimeout(() => {\n          var _barcodeRef$current;\n          return (_barcodeRef$current = barcodeRef.current) === null || _barcodeRef$current === void 0 ? void 0 : _barcodeRef$current.focus();\n        }, 100);\n      } else {\n        alert(\"保存失败\");\n      }\n    } catch (err) {\n      alert(\"网络错误\");\n    }\n  };\n  const handleEditFields = () => {\n    setIsEditable(true);\n  };\n  const handleEdit = item => {\n    setProduct(item);\n    setQuantity(0);\n    setIsEditable(false);\n    setView(\"add\");\n  };\n  const handleDelete = async id => {\n    if (!window.confirm(\"确定要删除该商品吗？\")) return;\n    try {\n      const res = await fetch(`${API_BASE}/${id}`, {\n        method: \"DELETE\"\n      });\n      if (res.ok) {\n        alert(\"删除成功\");\n        fetchProducts();\n      } else {\n        alert(\"删除失败\");\n      }\n    } catch (err) {\n      alert(\"网络错误\");\n    }\n  };\n  const filteredProducts = products.filter(item => item.productBarcode.includes(searchTerm) || item.name.includes(searchTerm));\n  return (\n    /*#__PURE__*/\n    // ... 保留其余 UI 不变 ...\n    _jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-100 p-4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(App, \"aXNRvmpgbsfPFmoCcSPfIppQ2ZE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","useRef","jsxDEV","_jsxDEV","API_BASE","App","_s","products","setProducts","view","setView","searchTerm","setSearchTerm","product","setProduct","_id","boxBarcode","productBarcode","name","spec","stock","quantity","setQuantity","isEditable","setIsEditable","barcodeRef","fetchProducts","res","fetch","data","json","err","alert","resetProduct","handleBarcodeEnter","e","key","value","target","trim","found","find","item","window","confirm","prev","handleChange","Number","handleSubmit","duplicate","p","existing","method","url","newData","headers","body","JSON","stringify","ok","setTimeout","_barcodeRef$current","current","focus","handleEditFields","handleEdit","handleDelete","id","filteredProducts","filter","includes","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jiukuiiii/Desktop/wms_demo/wms_frontend/src/App.js"],"sourcesContent":["// 入库校验增强：条码唯一、不能为空、数量不能为负数\nimport { useEffect, useState, useRef } from \"react\";\n\nconst API_BASE = \"https://wms-backend-hdu8.onrender.com/api/products\";\n\nfunction App() {\n  const [products, setProducts] = useState([]);\n  const [view, setView] = useState(\"list\");\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [product, setProduct] = useState({\n    _id: null,\n    boxBarcode: \"\",\n    productBarcode: \"\",\n    name: \"\",\n    spec: \"\",\n    stock: 0,\n  });\n  const [quantity, setQuantity] = useState(0);\n  const [isEditable, setIsEditable] = useState(false);\n  const barcodeRef = useRef();\n\n  const fetchProducts = async () => {\n    try {\n      const res = await fetch(API_BASE);\n      const data = await res.json();\n      setProducts(data);\n    } catch (err) {\n      alert(\"无法获取产品列表\");\n    }\n  };\n\n  useEffect(() => {\n    fetchProducts();\n  }, []);\n\n  const resetProduct = () => {\n    setProduct({ _id: null, boxBarcode: \"\", productBarcode: \"\", name: \"\", spec: \"\", stock: 0 });\n    setQuantity(0);\n    setIsEditable(false);\n  };\n\n  const handleBarcodeEnter = (e) => {\n    if (e.key === \"Enter\") {\n      const value = e.target.value.trim();\n      if (!value) return;\n      const found = products.find(\n        (item) => item.productBarcode === value || item.boxBarcode === value\n      );\n      if (found) {\n        setProduct(found);\n        setQuantity(0);\n        setIsEditable(false);\n      } else {\n        if (window.confirm(\"未找到该条码的产品，是否创建新产品？\")) {\n          resetProduct();\n          setProduct((prev) => ({ ...prev, productBarcode: value }));\n          setIsEditable(true);\n          setView(\"add\");\n        }\n      }\n    }\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    if (name === \"stock\") {\n      setQuantity(Number(value));\n    } else {\n      setProduct((prev) => ({ ...prev, [name]: value }));\n    }\n  };\n\n  const handleSubmit = async () => {\n    if (!product.productBarcode.trim()) {\n      alert(\"产品条码不能为空\");\n      return;\n    }\n    if (!product.name.trim()) {\n      alert(\"产品名称不能为空\");\n      return;\n    }\n    if (quantity <= 0) {\n      alert(\"入库数量必须大于 0\");\n      return;\n    }\n    const duplicate = products.find(p => p.productBarcode === product.productBarcode && p._id !== product._id);\n    if (duplicate) {\n      alert(\"产品条码已存在，必须唯一\");\n      return;\n    }\n\n    try {\n      const existing = products.find(p => p.productBarcode === product.productBarcode);\n      let method = \"POST\", url = API_BASE;\n      let newData = { ...product };\n      if (existing) {\n        method = \"PUT\";\n        url = `${API_BASE}/${existing._id}`;\n        newData = { ...existing, stock: existing.stock + quantity };\n      } else {\n        newData.stock = quantity;\n      }\n\n      const res = await fetch(url, {\n        method,\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(newData),\n      });\n      if (res.ok) {\n        alert(existing ? `已更新库存，当前库存：${newData.stock}` : \"保存成功\");\n        resetProduct();\n        fetchProducts();\n        setView(\"list\");\n        setTimeout(() => barcodeRef.current?.focus(), 100);\n      } else {\n        alert(\"保存失败\");\n      }\n    } catch (err) {\n      alert(\"网络错误\");\n    }\n  };\n\n  const handleEditFields = () => {\n    setIsEditable(true);\n  };\n\n  const handleEdit = (item) => {\n    setProduct(item);\n    setQuantity(0);\n    setIsEditable(false);\n    setView(\"add\");\n  };\n\n  const handleDelete = async (id) => {\n    if (!window.confirm(\"确定要删除该商品吗？\")) return;\n    try {\n      const res = await fetch(`${API_BASE}/${id}`, { method: \"DELETE\" });\n      if (res.ok) {\n        alert(\"删除成功\");\n        fetchProducts();\n      } else {\n        alert(\"删除失败\");\n      }\n    } catch (err) {\n      alert(\"网络错误\");\n    }\n  };\n\n  const filteredProducts = products.filter(\n    (item) =>\n      item.productBarcode.includes(searchTerm) ||\n      item.name.includes(searchTerm)\n  );\n\n  return (\n    // ... 保留其余 UI 不变 ...\n    <div className=\"min-h-screen bg-gray-100 p-4\">\n      {/* ... 保留页面结构 ... */}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}